package com.bluedotinnovation.zone;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;

import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import com.bluedotinnovation.common.BDCommon;

/**
 * @author Bluedot Innovation
 * Copyright (c) 2016 Bluedot Innovation. All rights reserved.
 * Get All Zones client demonstrates the listing of zone details for a given customer's application using Apache HTTP client and JSON Simple libraries.
 * 100 zones are returned per call, increment the page number parameter to get records corresponding to the page.
 */
public class GetAllZones extends BDCommon {

	public static void main(String[] args) throws IOException, ParseException, KeyManagementException, NoSuchAlgorithmException
	{
		String bdCustomerApiKey    = "462dacf0-2316-11e6-a994-bc305bf60831"; //This key is generated by Bluedot Access UI when you register.
		String bdApplicationApiKey = "6c36c440-2316-11e6-bd45-b8ca3a6b879d"; //This apiKey is generated when you create an application.
		String bdRestUrl           = "https://api.bluedotinnovation.com/1/zones?customerApiKey=" +bdCustomerApiKey + "&apiKey=" + bdApplicationApiKey + "&pageNumber=0"; 
		
		CloseableHttpClient httpRestClient = HttpClients.custom().setSSLSocketFactory(getSSLContextFactory()).build();
			
		HttpGet request            = new HttpGet(bdRestUrl);
		HttpResponse httpResponse  = httpRestClient.execute(request);
		
		if (httpResponse.getStatusLine().getStatusCode() == 200) {
			BufferedReader rd          = new BufferedReader (new InputStreamReader (httpResponse.getEntity().getContent()));
			JSONParser parser          = new JSONParser();
			String bdZonesJson;
			while ((bdZonesJson = rd.readLine()) != null) {
				 Object object = parser.parse(bdZonesJson);
				 JSONArray bdZonesJsonArray = (JSONArray) object;
				 for (Object zoneObject : bdZonesJsonArray){
				     JSONObject jsonObject =  (JSONObject) zoneObject;
				     System.out.println("Zone name : " + jsonObject.get("zoneName"));
				     System.out.println("Zone id: " + jsonObject.get("zoneId"));
				     System.out.println("---------\n");
				 }
			}
		} else {
			InputStream inputStream = httpResponse.getEntity().getContent();
        	byte[] bytes            = readStream(inputStream);
        	String resultString     = new String(bytes); //json error result
        	System.out.println(resultString);
		}
	}

}
