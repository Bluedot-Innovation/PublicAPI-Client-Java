/**
 * 
 */
package com.bluedotinnovation.fence;

import java.io.IOException;
import java.io.InputStream;
import java.nio.charset.Charset;
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.conn.ssl.SSLSocketFactory;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.impl.client.HttpClients;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import com.bluedotinnovation.common.BDCommon;


/**
 * @author Bluedot Innovation
 * Add fence java client demonstrates adding fences of various shapes to an existing zone using Apache HTTP client and JSON Simple libraries.
 * Circular fence
 * Bounding Box
 * Polygonal
 */
public class AddFence extends BDCommon
{

	private static String bdCustomerApiKey    = "ca4c8d11-6942-11e4-ba4b-a0481cdc3311"; //This key is generated by Bluedot Access UI when you register
	private static String bdApplicationApiKey = "f5223f4c-a0f3-47be-ba59-080b6290a9d4"; //This apiKey is generated when you create an application
    private static String bdRestUrl           = "https://api.bluedotinnovation.com/1/fences";
	private static String bdZoneId            = "dfafb7fd-d2f7-42ec-afd5-d5c7851c0396"; //This is the id of the zone being updated. This can be fetched by calling zones/getAll API
	
	/**
	 * @param args
	 * @throws ClientProtocolException 
	 * @throws IOException 
	 * @throws NoSuchAlgorithmException 
	 * @throws KeyManagementException 
	 * @throws ParseException
	 */
	public static void main(String[] args) throws ClientProtocolException, IOException, KeyManagementException, NoSuchAlgorithmException, ParseException
	{
		
	    	CloseableHttpClient httpRestClient = HttpClients.custom().setSSLSocketFactory(new SSLSocketFactory(getSSLContext())).build();
			
	   		HttpPost postRequest = new HttpPost(bdRestUrl);
	     
	   	    JSONParser parser    = new JSONParser();
	   	    JSONObject bdPolygonalFenceJSONObject = (JSONObject) parser.parse(getJsonPolygonalFence()); //add a polygonal fence
	   				    		    
	   		postRequest.addHeader("content-type", "application/json");
			postRequest.setEntity(new StringEntity(bdPolygonalFenceJSONObject.toJSONString(), Charset.defaultCharset()));
		 
		    HttpResponse response = httpRestClient.execute(postRequest);
		    	    	    
	        if (response.getStatusLine().getStatusCode() == 200)
	        {
	        	System.out.println("Fence was successfully created");
	        	InputStream inputStream = response.getEntity().getContent();
	        	byte[] bytes            = readStream(inputStream);
	        	String resultString     = new String(bytes); //json result
	        	JSONObject jsonResult   = (JSONObject)  parser.parse(resultString);
	        	System.out.println(jsonResult);
	        }
	        else 
	        {
	        	InputStream inputStream = response.getEntity().getContent();
	        	byte[] bytes            = readStream(inputStream);
	        	String resultString     = new String(bytes); //json error result
	        	System.out.println(resultString);
	        }		
       
	}
	
	
	/* 
	 * Or hand build the json object
       JSONObject application  = new JSONObject();		     		     
	   JSONObject securityNode = new JSONObject();
	   securityNode.put("customerApiKey", "bc199c80-5441-11e4-b7bb-a0481cdc3311");		    
	   application.put("security", securityNode);
	   -37.818780, 144.980734 
    */
	
	
	/*Circular fence requires a centerpoint and radius*/
	private static String getJsonCircularFence()
	{		
		String circularFenceJson =  
		"{" +
           "\"security\": {" +
           "\"apiKey\":" + "\"" + bdApplicationApiKey + "\"," +
           "\"customerApiKey\":" + "\"" + bdCustomerApiKey + "\" " +
        "}," + 
        "\"content\": {" +
            "\"zone\": {" +
                   "\"zoneId\":" + "\"" + bdZoneId + "\"," +
                "\"fences\": {" +
                    "\"circles\": [" +
                        "{"+
                            "\"name\": \"Circular fence-added by Emil\","+
                            "\"color\": \"#000ffff\","+
                            "\"radius\": \"30.330384237225\","+
                            "\"center\": {"+
                                "\"latitude\": \"-37.818780\","+
                                "\"longitude\": \"144.980734\" "+
                            "}"+
                        "}" +
                    "]" +
                "}"+
            "}"+
        "}"+
     "}";		
	  return circularFenceJson;
	}
	
	/*Bounding box requires north east and south west points*/
	private static String getJsonBoundingBox()
	{
		String boundingBoxFenceJson = 
				"{" +
		           "\"security\": {" +
		           "\"apiKey\":" + "\"" + bdApplicationApiKey + "\"," +
		           "\"customerApiKey\":" + "\"" + bdCustomerApiKey + "\" " +
		        "}," + 
		        "\"content\": {" +
		            "\"zone\": {" +
		               "\"zoneId\":" + "\"" + bdZoneId + "\"," +	
		    		 "\"fences\": {" +
		                "\"rectangles\": [" +
		                    "{"+
		                        "\"name\": \"Bounding Box-1\"," +
		                        "\"color\": \"#3559e\"," +
		                        "\"northEast\": {" +
		                            "\"latitude\": -37.81544591805361," +
		                            "\"longitude\": 144.9786114692688"+
		                        "}," +
		                        "\"southWest\": {" +
		                            "\"latitude\": -37.81758175613945," +
		                            "\"longitude\": 144.9731397628784" +
		                        "}" +
		                    "}" +
		                "]" +
		            "}"+
		        "}"+
		     "}" +
		   "}";							
		return boundingBoxFenceJson;
	}
	
	/*Polygonal fence requires a series points in lat/long*/
	private static String getJsonPolygonalFence()
	{
		String polygonalFenceJson = 
				       "{" +
				           "\"security\": {" +
				              "\"apiKey\":" + "\"" + bdApplicationApiKey + "\"," +
				              "\"customerApiKey\":" + "\"" + bdCustomerApiKey + "\" " +
				        "}," + 
				        "\"content\": {" +
				            "\"zone\": {" +
				                "\"zoneId\":" + "\"" + bdZoneId + "\"," +	
				                "\"fences\": {" +
				                "\"polygons\": [" +
				                    "{" +
				                        "\"name\": \"Polygon-Balendran-Pre-Update\"," +
				                        "\"color\": \"#000ffff\"," +
				                        "\"vertices\": [" +
				                             "{" +
				                                 "\"latitude\": -37.818717," +
				                                 "\"longitude\": 144.983085" +
				                             "},"+
				                             "{" +
				                                "\"latitude\": -37.819540," +
				                                "\"longitude\": 144.982125" +
				                             "}," +
				                             "{"  +
				                                "\"latitude\": -37.820298," +
				                                "\"longitude\": 144.985178" +
				                             "}," + 
				                             "{" +
				                                "\"latitude\": -37.820468," +
				                                "\"longitude\": 144.984228" +
				                             "}," +
				                             "{" +
				                                "\"latitude\": -37.818768," +
				                                "\"longitude\": 144.984330" +
				                             "}," +
				                             "{" +
				                                "\"latitude\": -37.819476," +
				                                "\"longitude\": 144.985033" +
				                             "}," +
				                             "{" +
				                                "\"latitude\": -37.820527," +
				                                "\"longitude\": 144.982978" +
				                             "}," +
				                             "{"  +
				                                "\"latitude\": -37.818887," +
				                                "\"longitude\": 144.982587" +
				                             "}" +
				                        "]" +
				                    "}" +
				                "]" +
				            "}" +
				        "}"+
				     "}" +
				"}";							
		return polygonalFenceJson;
	}
}
