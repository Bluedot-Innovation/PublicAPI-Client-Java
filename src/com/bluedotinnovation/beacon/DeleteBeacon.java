package com.bluedotinnovation.beacon;
 
import java.io.IOException;
import java.io.InputStream;
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;

import com.bluedotinnovation.common.BDCommon;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpDelete;
import org.apache.http.conn.ssl.SSLSocketFactory;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
 
/**
 * @author Bluedot Innovation
 * Delete Beacon REST client demonstrates deleting a beacon using Apache HTTP client libraries
 */
 
public class DeleteBeacon extends BDCommon{
	
    public static void main(String[] args) throws ParseException, IOException, KeyManagementException, NoSuchAlgorithmException{
         
        String bdCustomerApiKey = "7cd1ea80-d40e-22e4-84cb-b8ca3a6b879d"; //This key is generated by Bluedot Access UI when you register
        String bdApplicationApiKey = "d3161e80-38d1-11e4-b039-bc305bf60831"; //This apiKey is generated when you create an application
        String bdBeaconId       = "41cca1b8-2e71-41cd-897a-67336c1fc91f"; //Beacon ID generated when creating new beacons
        String bdUrl            = "https://api.bluedotinnovation.com/1/beacons?customerApiKey="+bdCustomerApiKey+ "&apiKey=" + bdApplicationApiKey +"&beaconId=" + bdBeaconId;
         
        CloseableHttpClient httpRestClient = HttpClients.custom().setSSLSocketFactory(new SSLSocketFactory(getSSLContext())).build();
        HttpDelete request    = new HttpDelete(bdUrl);
        HttpResponse response = httpRestClient.execute(request);
        JSONParser parser     = new JSONParser();
        
        if (response.getStatusLine().getStatusCode() == 200) {
            System.out.println("Beacon has been deleted successfully");
            InputStream inputStream = response.getEntity().getContent();
            byte[] bytes            = readStream(inputStream);
            String resultString     = new String(bytes); //json result
            JSONObject jsonResult   = (JSONObject)  parser.parse(resultString);
            System.out.println(jsonResult);
        }
        else{
            System.out.println("Error in deleting beacon");
            InputStream inputStream = response.getEntity().getContent();
            byte[] bytes            = readStream(inputStream);
            String resultString     = new String(bytes); //json error result
            System.out.println(resultString);
        }
    }
}