package com.bluedotinnovation.checkin;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;

import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import com.bluedotinnovation.common.BDCommon;

/**
 * @author Bluedot Innovation
 * Copyright (c) 2016 Bluedot Innovation. All rights reserved.
 * CheckInActivity client demonstrates fetching checkIn activities for a given zone.
 * 100 CheckIn activities are returned per call, increment the page number parameter to get records corresponding to the page
 * This api also accepts a date range as parameter(optional) where records within the start date and the end date range are returned
 */

public class BDCheckinActivityClient extends BDCommon {
	
    private static String bdCustomerApiKey    = "76e1ae30-c616-11e5-a7c0-b8ca3a6b879d"; //This key is generated by Bluedot Access UI when you register
    private static String bdApplicationApiKey = "dee11930-ebff-11e5-8e27-bc305bf60831"; //This apiKey is generated when you create an application
    private static String bdZoneId            = "67f99448-a646-43c9-a6ae-0d823d65edbd"; //This is the id of the zone being updated. This can be fetched by calling This can be fetched by calling GET Zones API API
    private static String startDate           = "11/9/2014";
    private static String endDate             = "14/9/2014";
    private static String bdRestBaseUrl       = "https://api.bluedotinnovation.com/1/checkinactivities";

	public static void main(String[] args) throws IOException, ParseException, KeyManagementException, NoSuchAlgorithmException {
		
		//getCheckInActivitiesByZoneAndDateRange();
		getAllCheckInActivitesByZone();
	}

    public static void getCheckInActivitiesByZoneAndDateRange() throws IOException, ParseException, KeyManagementException, NoSuchAlgorithmException {
    	
		String bdRestUrl = bdRestBaseUrl + "?simpleCheckInZoneId=" + bdZoneId + "&customerApiKey=" + bdCustomerApiKey + "&apiKey=" + bdApplicationApiKey + 
				"&startdate=" + startDate + "&enddate=" + endDate + "&pagenumber=0";
		
		CloseableHttpClient httpRestClient = HttpClients.custom().setSSLSocketFactory(getSSLContextFactory()).build();
		HttpGet request            = new HttpGet(bdRestUrl);
		HttpResponse httpResponse  = httpRestClient.execute(request);
		
		if (httpResponse.getStatusLine().getStatusCode() == 200){
			BufferedReader rd          = new BufferedReader (new InputStreamReader
					                    (httpResponse.getEntity().getContent()));
			JSONParser parser          = new JSONParser();
			String bdChecInRecords;
			
			while ( (bdChecInRecords = rd.readLine() ) != null) {
			     Object object                = parser.parse(bdChecInRecords);
			     JSONArray bdCheckInJsonArry  = (JSONArray) object;
			     
			     for (Object checkInObject : bdCheckInJsonArry) {
			    	 
			    	 JSONObject jsonObject        = (JSONObject) checkInObject;
			    	 
				     /*Print checkIn records returned*/			     
				     System.out.println("_id : " + jsonObject.get("_id").toString());
				     System.out.println("creationTime : " +  jsonObject.get("creationTime"));
				     
				     JSONObject notificationRoot     = (JSONObject) jsonObject.get("notification");
				     JSONObject notificationData     = (JSONObject) notificationRoot.get("d");
				     
				     System.out.println("zoneId :  " + notificationData.get("zoneId"));
				     System.out.println("zoneName :  " + notificationData.get("zoneName"));
				     System.out.println("speed : " + notificationData.get("speed"));
				     System.out.println("deviceType : " + notificationData.get("deviceType"));
				     System.out.println("bluedotId : " + notificationData.get("bluedotId")); // This is a fully randomised id and the real application id or device id is never stored in the db
				     System.out.println("---------\n");
				}
			    
			}
		} else {
			InputStream inputStream = httpResponse.getEntity().getContent();
        	byte[] bytes            = readStream(inputStream);
        	String resultString     = new String(bytes); //json error result
        	System.out.println(resultString);
		}
    }
	
    public static void getAllCheckInActivitesByZone() throws IOException, ParseException, KeyManagementException, NoSuchAlgorithmException {
    	
    	String bdRestUrl           = bdRestBaseUrl + "?simpleCheckInZoneId=" + bdZoneId + "&customerApiKey=" + bdCustomerApiKey + "&apiKey=" + bdApplicationApiKey + "&pagenumber=0";
    	
    	CloseableHttpClient httpRestClient = HttpClients.custom().setSSLSocketFactory(getSSLContextFactory()).build();
		HttpGet request            = new HttpGet(bdRestUrl);
		HttpResponse httpResponse  = httpRestClient.execute(request);
		
		if (httpResponse.getStatusLine().getStatusCode() == 200) {
			BufferedReader rd          = new BufferedReader (new InputStreamReader
					                    (httpResponse.getEntity().getContent()));
			JSONParser parser          = new JSONParser();
			String bdChecInRecords;
			
			while ((bdChecInRecords = rd.readLine()) != null) {
			     Object object                = parser.parse(bdChecInRecords);
			     JSONArray bdCheckInJsonArry  = (JSONArray) object;

			     for (Object checkInObject : bdCheckInJsonArry) {
			    	 JSONObject jsonObject = (JSONObject) checkInObject;
			    	 
				     /*Print checkIn records returned*/			     
				     System.out.println("_id : " + jsonObject.get("_id").toString());
				     System.out.println("creationTime : " + jsonObject.get("creationTime"));
				     
				     JSONObject notificationRoot = (JSONObject) jsonObject.get("notification");
				     JSONObject notificationData = (JSONObject) notificationRoot.get("d");
				     
				     System.out.println("zoneId : " + notificationData.get("zoneId"));
				     System.out.println("zoneName : " + notificationData.get("zoneName"));
				     System.out.println("speed : " + notificationData.get("speed"));
				     System.out.println("deviceType : " +  notificationData.get("deviceType"));
				     System.out.println("bluedotId : " +  notificationData.get("bluedotId")); // This is a fully randomised id and the real application id or device id is never stored in the db
				     System.out.println("---------\n");
				}		    
			}
		} else {
			InputStream inputStream = httpResponse.getEntity().getContent();
        	byte[] bytes            = readStream(inputStream);
        	String resultString     = new String(bytes); //json error result
        	System.out.println(resultString);
		}
    }
}
