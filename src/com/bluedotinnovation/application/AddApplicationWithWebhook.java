package com.bluedotinnovation.application;

import java.io.IOException;
import java.io.InputStream;
import java.nio.charset.Charset;
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;

import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import com.bluedotinnovation.common.BDCommon;

/**
 * @author Bluedot Innovation
 * Copyright (c) 2016 Bluedot Innovation. All rights reserved.
 * Add Application with Webhook client demonstrates adding an application for which a Webhook will be enabled, to your Bluedot backend using Apache HTTP client and JSON Simple libraries.
 */

public class AddApplicationWithWebhook extends BDCommon {
    
	private static String bdRestUrl = "https://api.bluedotinnovation.com/1/applications";
	
    /**
	 * @param args
	 * @throws IOException 
	 * @throws ParseException
	 * @throws NoSuchAlgorithmException 
	 * @throws KeyManagementException 
	 */
	public static void main(String[] args) throws IOException, ParseException, KeyManagementException, NoSuchAlgorithmException {
		
		String bdCustomerApiKey    = "7cd1ea80-d40e-11e4-84cb-b8ca3a6b879f"; //This key is generated by Bluedot Point Access UI when your account is created.

		CloseableHttpClient httpRestClient = HttpClients.custom().setSSLSocketFactory(getSSLContextFactory()).build();
		
		String applicationWithWebhook = 
				"{"+
					"\"security\": {"+
						"\"customerApiKey\":" +"\"" +bdCustomerApiKey + "\"" +
					"}," +
					"\"content\": {"+
						"\"application\": {"+
							"\"name\" : \"Java-Test Application-After-Create\"," +
							"\"packageName\": \"com.bluedot.creationtestbdtester\"," +
							"\"nextRuleUpdateIntervalFormatted\": \"00:10\"," +
							"\"webhook\": {" +
								//The URL of the server where the webhooks will be received.
								"\"url\": \"https://api.bdtester.com/webhook/checkinreceiver\"," + 
								"\"enabled\" : true," + 
								//The Security Token Key is the name of the field to be sent in the POST request header.
								"\"securityTokenKey\" : \"authToken\"," +
								//The Security Token Value field is value of the Security Token Key field sent in the POST request header.
								"\"securityTokenValue\" : \"f2f7a58c-f0d5-498c-9bad-acbc89923dc5\"" +
							"}"+
						"}"+
					"}"+
				"}";
					
	    JSONObject bdApplicationJSONObject;	    
	    JSONParser parser       = new JSONParser();
	    bdApplicationJSONObject = (JSONObject)  parser.parse(applicationWithWebhook);
		  
		HttpPost postRequest = new HttpPost(bdRestUrl);
		postRequest.addHeader("content-type", "application/json");
		postRequest.setEntity(new StringEntity(bdApplicationJSONObject.toJSONString(), Charset.defaultCharset()));
	 
	    HttpResponse response = httpRestClient.execute(postRequest);
        if (response.getStatusLine().getStatusCode() == 200) {
        	System.out.println("Application was successfully created");
        	InputStream inputStream = response.getEntity().getContent();
        	byte[] bytes            = readStream(inputStream);
        	String resultString     = new String(bytes); //json result
        	JSONObject jsonResult   = (JSONObject)  parser.parse(resultString);
        	System.out.println("apiKey for your application is : " + jsonResult.get("apiKey"));
        } else {
        	InputStream inputStream = response.getEntity().getContent();
        	byte[] bytes            = readStream(inputStream);
        	String resultString     = new String(bytes); //json error result
        	System.out.println(resultString);
        }			
	}
}
